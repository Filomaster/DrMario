// This is more general stylesheet. Styles of all elements are described here

body {
  color: #fff;
  background-color: black;
  margin: 0;
  padding: 0;
}

.background {
  width: var(--width);
  height: 100vh;
  margin: auto;
  position: relative;
}
.background-fill {
  position: absolute;
  width: var(--width);
  display: grid;
  grid-template-columns: repeat(var(--tiles-width), var(--bcg-tile-size));
  grid-auto-rows: minmax(var(--bcg-tile-size), auto);
}

.bcg-img {
  position: absolute;
  width: var(--width);
  height: var(--height);
  background-image: var(--bcg-img);
  background-size: var(--width) var(--height);
  image-rendering: pixelated;
}

.jar {
  position: absolute;
  bottom: var(--offset-y);
  left: var(--offset-x);
  width: var(--jar-width);
  height: var(--jar-height);
  background-image: var(--jar-img);
  background-size: var(--jar-width) var(--jar-height);
  background-repeat: no-repeat;
  image-rendering: pixelated;
}
.jar-mask {
  position: absolute;
  bottom: var(--offset-y);
  left: var(--offset-x);
  width: var(--jar-width);
  height: var(--jar-height);
  background-color: var(--background-tile-a);
  mask: var(--jar-mask);
  mask-size: var(--jar-width) var(--jar-height);
  background-repeat: no-repeat;
  image-rendering: pixelated;
}

.score {
  position: absolute;
  display: grid;
  grid-template-columns: repeat(7, var(--tile-size));
  image-rendering: pixelated;
  top: var(--score-y);
  left: var(--scores-x);
}

.virus-info {
  position: absolute;
  height: var(--tile-size);
  bottom: var(--virus-bottom);
  right: var(--info-right);
  display: grid;
  grid-template-columns: repeat(2, var(--tile-size));
  image-rendering: pixelated;
}
.lvl {
  position: absolute;
  height: var(--tile-size);
  bottom: var(--lvl-bottom);
  right: var(--info-right);
  display: grid;
  grid-template-columns: repeat(2, var(--tile-size));
  image-rendering: pixelated;
}
.grid-container {
  position: absolute;
  left: var(--board-offset-x);
  bottom: var(--board-offset-y);
  display: grid;

  grid-template-columns: repeat(8, var(--tile-size));
  grid-template-rows: repeat(16, var(--tile-size));
}

.crt::before {
  content: " ";
  display: block;
  width: var(--width);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%),
    linear-gradient(90deg, rgba(255, 0, 0, 0.05), rgba(0, 255, 0, 0.05), rgba(0, 0, 255, 0.05));
  z-index: 2;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
}

.crt::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 2;
  pointer-events: none;
  animation: flicker 0.15s infinite;
}

.vignette {
  position: absolute;
  height: 100vh;
  width: var(--width);
  margin: auto;
  background: radial-gradient(transparent 85%, #000000bb),
    linear-gradient(90deg, #000000bb, transparent 15%, transparent 85%, #000000bb),
    linear-gradient(#000000bb, transparent 5%, transparent 95%, #000000bb);
  background-blend-mode: multiply;
  z-index: 4;
}

// prettier-ignore
.pixel-perfect{
  background-position: center;
  background-size: 100%;
  image-rendering: pixelated;
  &.virus{
    &.yellow { 
      background-image: var(--yl-virus); 
      &.clear{background-image: var(--yl-x)}
    }
    &.red { 
      background-image: var(--rd-virus);
      &.clear{background-image: var(--rd-x)}
    }
    &.blue { 
      background-image: var(--bl-virus); 
      &.clear{background-image: var(--bl-x)}
    }
  }
  &.pill{
    &.yellow {
      &.single { background-image: var(--yl-dot) }
      &.up { background-image: var(--yl-up)  }
      &.down { background-image: var(--yl-down) }
      &.left { background-image: var(--yl-left) }
      &.right { background-image: var(--yl-right) }
      &.clear { background-image: var(--yl-o) }
    }
    &.red { 
      &.single { background-image: var(--rd-dot) }
      &.up { background-image: var(--rd-up)  }
      &.down { background-image: var(--rd-down) }
      &.left { background-image: var(--rd-left) }
      &.right { background-image: var(--rd-right) }
      &.clear { background-image: var(--rd-o) }
    }
    &.blue { 
      &.single { background-image: var(--bl-dot) }
      &.up { background-image: var(--bl-up)  }
      &.down { background-image: var(--bl-down) }
      &.left { background-image: var(--bl-left) }
      &.right { background-image: var(--bl-right) }
      &.clear { background-image: var(--bl-o) }
    }
  }
}

.error {
  background-color: white;
}
// Flicker keyframes are taken from internet to emulate crt look
// prettier-ignore
@keyframes flicker {
  0% { opacity: 0.27861; }
  5% { opacity: 0.34769; }
  10% { opacity: 0.23604; }
  15% { opacity: 0.90626; }
  20% { opacity: 0.18128; }
  25% { opacity: 0.83891; }
  30% { opacity: 0.65583; }
  35% { opacity: 0.67807; }
  40% { opacity: 0.26559; }
  45% { opacity: 0.84693; }
  50% { opacity: 0.96019; }
  55% { opacity: 0.08594; }
  60% { opacity: 0.20313; }
  65% { opacity: 0.71988; }
  70% { opacity: 0.53455; }
  75% { opacity: 0.37288; }
  80% { opacity: 0.71428; }
  85% { opacity: 0.70419; }
  90% { opacity: 0.7003; }
  95% { opacity: 0.36108; }
  100% { opacity: 0.24387; }
}
