$gs: 5vh;
$board-width: 8 * $gs;
$screen-width: 134vh;

// All colors in the foreground
$gray: #837e85;
$blue: #78a0db;
$yellow: #f4e377;
$red: #9e454c;

body {
  color: #fff;
  background-color: black;
  margin: 0;
  padding: 0;
}

// Sooo... these are all dynamically changed variable, to provide feel of original games, regardless emulation mode
:root {
  --width: 134vh;
  --height: 100vh;
  --jar-width: 0;
  --jar-height: 0;
  --left-decoration-width: 0;
  --scoreboard-height: 0;
  --info-width: 0;
  --glass-height: 0;
  --tiles-width: 40;
  --tiles-height: 24;
  --board-offset-x: 0;
  --board-offset-y: 0;
  --offset-x: 16vh;
  --offset-y: 6vh;
  --tile-size: 10px;
  --background-tile-a: #d6d6d6;
  --background-tile-b: transparent;
}

.background {
  width: var(--width);
  height: 100vh;
  margin: auto;
  position: relative;
}
.background-fill {
  position: absolute;
  width: var(--width);
  display: grid;
  grid-template-columns: repeat(var(--tiles-width), var(--tile-size));
  grid-auto-rows: minmax(var(--tile-size), auto);
}

.scoreboard {
  position: absolute;
  width: var(--info-width);
  height: var(--left-decoration-width);
  right: var(--tile-size);
  bottom: 0;
  background-position: center;
  background-image: url("/images/infoboard.png");
  background-repeat: no-repeat;
  background-size: var(--info-width) var(--left-decoration-width);
  image-rendering: pixelated;
}
.info {
  position: absolute;
  width: var(--left-decoration-width);
  height: var(--scoreboard-height);
  left: var(--tile-size);
  top: var(--tile-size);
  background-position: center;
  background-image: url("/images/scoreboard.png");
  background-repeat: no-repeat;
  background-size: var(--left-decoration-width) var(--scoreboard-height);
  image-rendering: pixelated;
}

.glass {
  position: absolute;
  width: var(--left-decoration-width);
  height: var(--glass-height);
  left: var(--tile-size);
  bottom: 0;
  background-position: center;
  background-image: url("/images/glass.png");
  background-repeat: no-repeat;
  background-size: var(--left-decoration-width) var(--glass-height);
  image-rendering: pixelated;
}

.jar {
  position: absolute;
  top: var(--offset-y);
  left: var(--offset-x);
  width: var(--jar-width);
  height: var(--jar-height);
  background-image: url("/images/jar.png");
  background-repeat: no-repeat;
  background-size: var(--jar-width) var(--jar-height);
  image-rendering: pixelated;
  mask: url("/images/jar-mask.png"), var(--background-tile-a);
  mask-size: var(--jar-width) var(--jar-height);
}
.jar-mask {
  position: absolute;
  top: var(--offset-y);
  left: var(--offset-x);
  width: var(--jar-width);
  height: var(--jar-height);

  z-index: 4;

  image-rendering: pixelated;
}

.grid-container {
  position: absolute;
  left: var(--board-offset-x);
  top: var(--board-offset-y);
  display: grid;
  background-color: #000;
  // border: 10px solid rgb(254, 255, 174);

  grid-template-columns: repeat(8, var(--tile-size));
  grid-template-rows: repeat(16, var(--tile-size));
}

.crt::before {
  content: " ";
  display: block;
  width: var(--width);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%),
    linear-gradient(90deg, rgba(255, 0, 0, 0.05), rgba(0, 255, 0, 0.05), rgba(0, 0, 255, 0.05));
  z-index: 2;
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
}

.crt::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 2;
  pointer-events: none;
  animation: flicker 0.15s infinite;
}

.vignette {
  position: absolute;
  height: 100vh;
  width: var(--width);
  margin: auto;
  background: radial-gradient(transparent 85%, black),
    linear-gradient(90deg, black, transparent 15%, transparent 85%, black),
    linear-gradient(black, transparent 5%, transparent 95%, black);
  background-blend-mode: multiply;
  z-index: 4;
}

// prettier-ignore
.pixel-perfect{
  background-position: center;
  background-size: 100%;
  image-rendering: pixelated;
  &.virus{
    &.yellow { 
      background-image: url("/images/sprites/viruses/yellow_new.png"); 
      &.clear{background-image: url("/images/sprites/viruses/yl_x.png")}
    }
    &.red { 
      background-image: url("/images/sprites/viruses/virus_red.png");
      &.clear{background-image: url("/images/sprites/viruses/br_x.png")}
    }
    &.blue { 
      background-image: url("/images/sprites/viruses/virus_blue.png"); 
      &.clear{background-image: url("/images/sprites/viruses/bl_x.png")}
    }
  }
  &.pill{
    &.yellow {
      &.single { background-image: url("/images/sprites/pills/yl_dot.png") }
      &.up { background-image: url("/images/sprites/pills/yl_up.png")  }
      &.down { background-image: url("/images/sprites/pills/yl_down.png") }
      &.left { background-image: url("/images/sprites/pills/yl_left.png") }
      &.right { background-image: url("/images/sprites/pills/yl_right.png") }
      &.clear { background-image: url("/images/sprites/pills/yl_o.png") }
    }
    &.red { 
      &.single { background-image: url("/images/sprites/pills/br_dot.png") }
      &.up { background-image: url("/images/sprites/pills/br_up.png")  }
      &.down { background-image: url("/images/sprites/pills/br_down.png") }
      &.left { background-image: url("/images/sprites/pills/br_left.png") }
      &.right { background-image: url("/images/sprites/pills/br_right.png") }
      &.clear { background-image: url("/images/sprites/pills/br_o.png") }
    }
    &.blue { 
      &.single { background-image: url("/images/sprites/pills/bl_dot.png") }
      &.up { background-image: url("/images/sprites/pills/bl_up.png")  }
      &.down { background-image: url("/images/sprites/pills/bl_down.png") }
      &.left { background-image: url("/images/sprites/pills/bl_left.png") }
      &.right { background-image: url("/images/sprites/pills/bl_right.png") }
      &.clear { background-image: url("/images/sprites/pills/bl_o.png") }
    }
  }
}

.error {
  background-color: white;
}
// Flicker keyframes are taken from internet to emulate crt look
// prettier-ignore
@keyframes flicker {
  0% { opacity: 0.27861; }
  5% { opacity: 0.34769; }
  10% { opacity: 0.23604; }
  15% { opacity: 0.90626; }
  20% { opacity: 0.18128; }
  25% { opacity: 0.83891; }
  30% { opacity: 0.65583; }
  35% { opacity: 0.67807; }
  40% { opacity: 0.26559; }
  45% { opacity: 0.84693; }
  50% { opacity: 0.96019; }
  55% { opacity: 0.08594; }
  60% { opacity: 0.20313; }
  65% { opacity: 0.71988; }
  70% { opacity: 0.53455; }
  75% { opacity: 0.37288; }
  80% { opacity: 0.71428; }
  85% { opacity: 0.70419; }
  90% { opacity: 0.7003; }
  95% { opacity: 0.36108; }
  100% { opacity: 0.24387; }
}
